name: Deploy
on:
        workflow_run:
                workflows: ["Build"]
                types:
                        - completed
        workflow_dispatch:

jobs:
    Development:
        runs-on: ubuntu-latest
        environment: Development
        steps:
        - name: Checkout code
          uses: actions/checkout@v2

        - name: Install jq
          run: sudo apt-get update && sudo apt-get install -y jq

        - name: Download artifact from another workflow
          run: |
            # Get the ID of the last successful run of the workflow
            run_id=$(curl --silent --show-error -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                    "https://api.github.com/repos/${{ github.repository }}/actions/workflows/build.yml/runs?status=success&event=push" \
                    | jq -r '.workflow_runs[0].id')

            # Get the download URL of the artifact
            download_url=$(curl --silent --show-error -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                    "https://api.github.com/repos/${{ github.repository }}/actions/runs/$run_id/artifacts" \
                    | jq -r '.artifacts[] | select(.name=="app-artifact") | .archive_download_url')

            # Download the artifact
            curl -L -o app-artifact.zip -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" $download_url

        - name: Deploy to Development
          run: echo "Deploying to Dev"

    Testing:
        runs-on: ubuntu-latest
        environment: Testing
        needs: Development
        steps:
        - name: Checkout code
          uses: actions/checkout@v2

        - name: Install jq
          run: sudo apt-get update && sudo apt-get install -y jq

        - name: Download artifact from another workflow
          run: |
            # Get the ID of the last successful run of the workflow
            run_id=$(curl --silent --show-error -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                    "https://api.github.com/repos/${{ github.repository }}/actions/workflows/build.yml/runs?status=success&event=push" \
                    | jq -r '.workflow_runs[0].id')

            # Get the download URL of the artifact
            download_url=$(curl --silent --show-error -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                    "https://api.github.com/repos/${{ github.repository }}/actions/runs/$run_id/artifacts" \
                    | jq -r '.artifacts[] | select(.name=="app-artifact") | .archive_download_url')

            # Download the artifact
            curl -L -o app-artifact.zip -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" $download_url

        - name: Deploy to Testing
          run: echo "Deploying to Q&A"

    Production:
        runs-on: ubuntu-latest
        environment: Production
        needs: Testing
        steps:
        - name: Checkout code
          uses: actions/checkout@v2

        - name: Install jq
          run: sudo apt-get update && sudo apt-get install -y jq

        - name: Download artifact from another workflow
          run: |
            # Get the ID of the last successful run of the workflow
            run_id=$(curl --silent --show-error -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                    "https://api.github.com/repos/${{ github.repository }}/actions/workflows/build.yml/runs?status=success&event=push" \
                    | jq -r '.workflow_runs[0].id')

            # Get the download URL of the artifact
            download_url=$(curl --silent --show-error -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                    "https://api.github.com/repos/${{ github.repository }}/actions/runs/$run_id/artifacts" \
                    | jq -r '.artifacts[] | select(.name=="app-artifact") | .archive_download_url')

            # Download the artifact
            curl -L -o app-artifact.zip -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" $download_url

        - name: Deploy to Production
          run: echo "Deploying to Production"